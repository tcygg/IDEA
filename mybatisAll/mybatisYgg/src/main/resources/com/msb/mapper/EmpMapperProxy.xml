<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msb.mapper.EmpMapperProxy">
    <!--
    返回单个对象
    public Emp findOne();
    id 相当于方法名
    resultType 相当于返回值类型
        sql语句的查询结果用哪个类来进行封装 如果返回值类型是集合,这里写的也是集合中的元素对应的类,不是集合本身作为类型
    paramaterType 参数类型
    SQL语句就是具体的方法体的实现
    -->

    <resultMap id="BaseResultMap" type="com.msb.pojo.Emp">
        <id property="empno" column="EMPNO" jdbcType="INTEGER"/>
        <result property="ename" column="ENAME" jdbcType="VARCHAR"/>
        <result property="job" column="JOB" jdbcType="VARCHAR"/>
        <result property="mgr" column="MGR" jdbcType="INTEGER"/>
        <result property="hiredate" column="HIREDATE" jdbcType="DATE"/>
        <result property="sal" column="SAL" jdbcType="DOUBLE"/>
        <result property="comm" column="COMM" jdbcType="DOUBLE"/>
        <result property="deptno" column="DEPTNO" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        EMPNO
        ,ENAME,JOB,
        MGR,HIREDATE,SAL,
        COMM,DEPTNO
    </sql>
    <select id="findAllEmp" resultType="emp">
        select *
        from emp
    </select>

    <select id="findOne" resultType="emp">
        select *
        from emp
        where empno = 7566
    </select>
    <!--返回多个对象的Map集合
       把查询出来的数据中的某一列作为键,整条数据封装的对象作为值
       public Map<key,Emp> findEmpMap()
       <empno,Emp>
       <key,Emp>
       -->
    <select id="findEmpMap" resultType="map">
        select *
        from emp
    </select>


    <select id="findByEmpno" resultType="emp">
        select *
        from emp
        where empno = #{empno}
    </select>


    <select id="findByDeptnoAndSal" resultType="emp">
        select *
        from emp
        where deptno = #{deptno}
          and sal >= #{sal}
    </select>

    <select id="findByDeptnoAndSal2" resultType="emp" parameterType="map">
        <!--select * from emp where deptno =#{arg0} and sal >= #{arg1}-->
        <!-- select * from emp where deptno =#{param1} and sal >= #{param2}-->
        select * from emp where deptno =#{deptno} and sal >= #{sal}
    </select>

    <select id="findByDeptnoAndSal3" resultType="emp" parameterType="emp">
        <!--select * from emp where deptno =#{arg0} and sal >= #{arg1}-->
        <!-- select * from emp where deptno =#{param1} and sal >= #{param2}-->
        select * from emp where deptno =#{deptno} and sal >= #{sal}
    </select>

<!--    <select id="findByDeptnoAndSal4" resultType="emp" >
        &lt;!&ndash;select * from emp where deptno =#{arg0} and sal >= #{arg1}&ndash;&gt;
        &lt;!&ndash; select * from emp where deptno =#{param1} and sal >= #{param2}&ndash;&gt;
&#45;&#45;         select * from emp where deptno =#{param1.deptno} and sal >= #{param2.sal}
        select * from emp where deptno =#{empa.deptno} and sal >= #{empb.sal}

    </select>-->
    <select id="findByDeptnoAndSal4" resultType="emp"  >
        <!-- select * from emp where deptno =#{arg0.deptno} and sal >= #{arg1.sal} -->
        select * from emp where deptno =#{param1.deptno} and sal >= #{param2.sal}
        <!-- select * from emp where deptno =#{empa.deptno} and sal >= #{empb.sal}-->
    </select>

    <select id="findByEname" resultType="emp"  >
        select * from emp where ename like concat('%',#{name},'%')

    </select>


    <insert id="insertEmp" useGeneratedKeys="true" keyProperty="empno">


        insert into emp values(#{empno},#{ename},#{job},#{mgr},#{hiredate},#{sal},#{comm},#{deptno})


    </insert>

    <!--int updateEnameByEmpno(@Param("empno") int empno,@Param("ename") String ename);-->
    <update id="updateEnameByEmpno" >
        update emp set ename =#{ename} where empno =#{empno}
    </update>
    <!--int deleteByEmpno(int empno);-->
    <update id="deleteByEmpno" >
        delete from emp where empno =#{empno}
    </update>


</mapper>


        <!--
        <mapper namespace="bbb">
        &lt;!&ndash;public List<Dept> findAll(){    }&ndash;&gt;
        <select id="findAllEmp" resultType="emp" >
            select * from emp
        </select>
        </mapper>-->
