<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msb.mapper.EmpMapper2">
    <!--
    返回单个对象
    public Emp findOne();
    id 相当于方法名
    resultType 相当于返回值类型
        sql语句的查询结果用哪个类来进行封装 如果返回值类型是集合,这里写的也是集合中的元素对应的类,不是集合本身作为类型
    paramaterType 参数类型
    SQL语句就是具体的方法体的实现
    -->

    <resultMap id="BaseResultMap" type="com.msb.pojo.Emp">
        <id property="empno" column="EMPNO" jdbcType="INTEGER"/>
        <result property="ename" column="ENAME" jdbcType="VARCHAR"/>
        <result property="job" column="JOB" jdbcType="VARCHAR"/>
        <result property="mgr" column="MGR" jdbcType="INTEGER"/>
        <result property="hiredate" column="HIREDATE" jdbcType="DATE"/>
        <result property="sal" column="SAL" jdbcType="DOUBLE"/>
        <result property="comm" column="COMM" jdbcType="DOUBLE"/>
        <result property="deptno" column="DEPTNO" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        EMPNO
        ,ENAME,JOB,
        MGR,HIREDATE,SAL,
        COMM,DEPTNO
    </sql>
    <!--
    参数为一个基本数据类型
    根据员工工号查询员工的全部信息,返回单个员工对象
    public Emp findByEmpno(int empno);
    parameterType 在有参数情况下也是可以省略不写  mybatis 可以根据实际情况自动判断
    如果要写parameterType 那么就要写对
    在SQL语句上可以使用${}  #{} 代表参数的占位
    如果参数是单个基本数据类型,{}中名字可以随便写,见名知意
    ${} 代表mybatis底层使用Statment语句对象,参数是以字符串拼接的形式设置
    #{} 代表mybatis底层使用的preparedStatment语句对象,参数使用?作为占位符处理
    #{} 以后常用
    -->

    <select id="findByEmpno" resultType="emp" parameterType="int">
        select *
        from emp
        where empno = #{empno}
    </select>


    <!--
参数为map集合
查询指定部门号和指定最低薪资的员工信息
20 号部门 且工资在1500以上的员工信息
public List<Emp> findEmpByDeptnoAndSal(int deptno,double sal);
<  >  大于号小于号,最好要进行转译处理,参照HTML转译  w3school在线文档中有转译符号对应规则   &gt;= 大于等于

 Map<String,Object> args=new HashMap<>();
    args.put("deptno", 20);
    args.put("sal", 1500.0);
#{}中写的是map集合中,参数的键
-->
    <select id="findEmpByDeptnoAndSal" resultType="emp" parameterType="map">
        select * from emp where deptno = #{deptno} and sal &gt;= #{sal}
    </select>

    <!--
参数为对象
emp >>>  deptno   sal
参数是我们自定义的类型,那么 #{}中写的是参数的属性名
-->
    <select id="findEmpByDeptnoAndSal2" resultType="emp" parameterType="emp">
        select *
        from emp
        where deptno = #{deptno}
          and sal &gt;= #{sal}
    </select>

</mapper>

